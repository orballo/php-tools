LITERAL = _{
    DECIMAL_LITERAL
  | OCTAL_LITERAL
  | HEXADECIMAL_LITERAL
  | BINARY_LITERAL
  | FLOATING_LITERAL
  | FRACTIONAL_LITERAL
  | SINGLE_QUOTED_STRING_LITERAL
  | DOUBLE_QUOTED_STRING_LITERAL
  | HEREDOC_STRING_LITERAL
  | NOWDOC_STRING_LITERAL
}

// Integer Literals

DECIMAL_LITERAL     = @{ ASCII_NONZERO_DIGIT ~ ASCII_DIGIT* }
OCTAL_LITERAL       = @{ "0" ~ ASCII_OCT_DIGIT+ }
HEXADECIMAL_LITERAL = @{ "0" ~ ^"x" ~ ASCII_HEX_DIGIT+ }
BINARY_LITERAL      = @{ "0" ~ ^"b" ~ ASCII_BIN_DIGIT+ }

// Floating Literals

FLOATING_LITERAL   = @{ (FRACTIONAL_LITERAL ~ EXPONENT_PART?) | (ASCII_DIGIT+ ~ EXPONENT_PART) }
FRACTIONAL_LITERAL = @{ (ASCII_DIGIT* ~ "." ~ ASCII_DIGIT+) | (ASCII_DIGIT+ ~ ".") }
EXPONENT_PART      =  { ^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+ }

// Single Quoted String Literals

SINGLE_QUOTED_STRING_LITERAL   = @{ "'" ~ SINGLE_QUOTED_STRING_CHARACTER* ~ "'" }
SINGLE_QUOTED_STRING_CHARACTER = _{ "\\'" | "\\\\" | !("'") ~ ANY }

// Double Quoted String Literals

DOUBLE_QUOTED_STRING_LITERAL = @{ "\"" ~ DOUBLE_QUOTED_CHARACTER* ~ "\"" }
DOUBLE_QUOTED_CHARACTER      = _{ "\\\"" | "\\\\" | !("\"") ~ ANY }

// Heredoc String Literals

HEREDOC_STRING_LITERAL = @{ "<<<" ~ HEREDOC_IDENTIFIER ~ NEWLINE ~ (!PEEK ~ ANY)* ~ POP }
HEREDOC_IDENTIFIER     =  { PUSH(NAME) | "\"" ~ PUSH(NAME) ~ "\"" }

// Nowdoc String Literals

NOWDOC_STRING_LITERAL = @{ "<<<" ~ "'" ~ NOWDOC_IDENTIFIER ~ "'" ~ NEWLINE ~ (!PEEK ~ ANY)* ~ POP }
NOWDOC_IDENTIFIER     =  { PUSH(NAME) }

// STRING_VARIABLE                           =  { VARIABLE_NAME ~ OFFSET_OR_PROPERTY? | "{$" ~ EXPRESSION ~ "}" }
// OFFSET_OR_PROPERTY                        =  { OFFSET_IN_STRING | PROPERTY_IN_STRING }
// OFFSET_IN_STRING                          =  { "[" ~ (NAME | VARIABLE_NAME | INTEGER_LITERAL) ~ "]" }
// PROPERTY_IN_STRING                        =  { "->" ~ NAME }
