---
source: packages/parser/tests/lexical_grammar.rs
expression: parsed_file.next().unwrap()
input_file: packages/parser/tests/fixtures/string_literals.php
---
Pair {
    rule: SCRIPT,
    span: Span {
        str: "<?php\n\n// Single Quoted String Literals\n\n'This is a single quoted string literal';\n'This is a single quoted string literal with an escaped single quote: \\'';\n'This is a single quoted string literal with an escaped backslash: \\\\';\n'This is a single quoted string literal with a newline: \\n';\nb'This is a single quoted binary string literal';\n\n// Double Quoted String Literals\n\n\"This is a double quoted string literal\";\n\"This is a double quoted string literal with simple escape sequences: \\\\ \\\" \\$ \\e \\f \\n \\r \\t \\v\";\n\"This is a double quoted string literal with hoctal escape sequences: \\7 \\77 \\777\";\n\"This is a double quoted string literal with hexadecimal escape sequences: \\x8 \\xFF\";\n\"This is a double quoted string literal with unicode escape sequences: \\u{91223} \\u{00CCFF} \\u{1}\";\n\"This is a double quoted string literal with a literal backslash: \\bar\";\n\"This is a double quoted string literal with variable interpolation: $foo\";\nb\"This is a double quoted binary string literal\";\n",
        start: 0,
        end: 986,
    },
    inner: [
        Pair {
            rule: SCRIPT_SECTION,
            span: Span {
                str: "<?php\n\n// Single Quoted String Literals\n\n'This is a single quoted string literal';\n'This is a single quoted string literal with an escaped single quote: \\'';\n'This is a single quoted string literal with an escaped backslash: \\\\';\n'This is a single quoted string literal with a newline: \\n';\nb'This is a single quoted binary string literal';\n\n// Double Quoted String Literals\n\n\"This is a double quoted string literal\";\n\"This is a double quoted string literal with simple escape sequences: \\\\ \\\" \\$ \\e \\f \\n \\r \\t \\v\";\n\"This is a double quoted string literal with hoctal escape sequences: \\7 \\77 \\777\";\n\"This is a double quoted string literal with hexadecimal escape sequences: \\x8 \\xFF\";\n\"This is a double quoted string literal with unicode escape sequences: \\u{91223} \\u{00CCFF} \\u{1}\";\n\"This is a double quoted string literal with a literal backslash: \\bar\";\n\"This is a double quoted string literal with variable interpolation: $foo\";\nb\"This is a double quoted binary string literal\";\n",
                start: 0,
                end: 986,
            },
            inner: [
                Pair {
                    rule: OPEN_TAG,
                    span: Span {
                        str: "<?php",
                        start: 0,
                        end: 5,
                    },
                    inner: [],
                },
                Pair {
                    rule: SINGLE_QUOTED_STRING_LITERAL,
                    span: Span {
                        str: "'This is a single quoted string literal'",
                        start: 41,
                        end: 81,
                    },
                    inner: [],
                },
                Pair {
                    rule: SEMICOLON,
                    span: Span {
                        str: ";",
                        start: 81,
                        end: 82,
                    },
                    inner: [],
                },
                Pair {
                    rule: SINGLE_QUOTED_STRING_LITERAL,
                    span: Span {
                        str: "'This is a single quoted string literal with an escaped single quote: \\''",
                        start: 83,
                        end: 156,
                    },
                    inner: [],
                },
                Pair {
                    rule: SEMICOLON,
                    span: Span {
                        str: ";",
                        start: 156,
                        end: 157,
                    },
                    inner: [],
                },
                Pair {
                    rule: SINGLE_QUOTED_STRING_LITERAL,
                    span: Span {
                        str: "'This is a single quoted string literal with an escaped backslash: \\\\'",
                        start: 158,
                        end: 228,
                    },
                    inner: [],
                },
                Pair {
                    rule: SEMICOLON,
                    span: Span {
                        str: ";",
                        start: 228,
                        end: 229,
                    },
                    inner: [],
                },
                Pair {
                    rule: SINGLE_QUOTED_STRING_LITERAL,
                    span: Span {
                        str: "'This is a single quoted string literal with a newline: \\n'",
                        start: 230,
                        end: 289,
                    },
                    inner: [],
                },
                Pair {
                    rule: SEMICOLON,
                    span: Span {
                        str: ";",
                        start: 289,
                        end: 290,
                    },
                    inner: [],
                },
                Pair {
                    rule: SINGLE_QUOTED_STRING_LITERAL,
                    span: Span {
                        str: "b'This is a single quoted binary string literal'",
                        start: 291,
                        end: 339,
                    },
                    inner: [],
                },
                Pair {
                    rule: SEMICOLON,
                    span: Span {
                        str: ";",
                        start: 339,
                        end: 340,
                    },
                    inner: [],
                },
                Pair {
                    rule: DOUBLE_QUOTED_STRING_LITERAL,
                    span: Span {
                        str: "\"This is a double quoted string literal\"",
                        start: 376,
                        end: 416,
                    },
                    inner: [],
                },
                Pair {
                    rule: SEMICOLON,
                    span: Span {
                        str: ";",
                        start: 416,
                        end: 417,
                    },
                    inner: [],
                },
                Pair {
                    rule: DOUBLE_QUOTED_STRING_LITERAL,
                    span: Span {
                        str: "\"This is a double quoted string literal with simple escape sequences: \\\\ \\\" \\$ \\e \\f \\n \\r \\t \\v\"",
                        start: 418,
                        end: 515,
                    },
                    inner: [],
                },
                Pair {
                    rule: SEMICOLON,
                    span: Span {
                        str: ";",
                        start: 515,
                        end: 516,
                    },
                    inner: [],
                },
                Pair {
                    rule: DOUBLE_QUOTED_STRING_LITERAL,
                    span: Span {
                        str: "\"This is a double quoted string literal with hoctal escape sequences: \\7 \\77 \\777\"",
                        start: 517,
                        end: 599,
                    },
                    inner: [],
                },
                Pair {
                    rule: SEMICOLON,
                    span: Span {
                        str: ";",
                        start: 599,
                        end: 600,
                    },
                    inner: [],
                },
                Pair {
                    rule: DOUBLE_QUOTED_STRING_LITERAL,
                    span: Span {
                        str: "\"This is a double quoted string literal with hexadecimal escape sequences: \\x8 \\xFF\"",
                        start: 601,
                        end: 685,
                    },
                    inner: [],
                },
                Pair {
                    rule: SEMICOLON,
                    span: Span {
                        str: ";",
                        start: 685,
                        end: 686,
                    },
                    inner: [],
                },
                Pair {
                    rule: DOUBLE_QUOTED_STRING_LITERAL,
                    span: Span {
                        str: "\"This is a double quoted string literal with unicode escape sequences: \\u{91223} \\u{00CCFF} \\u{1}\"",
                        start: 687,
                        end: 785,
                    },
                    inner: [],
                },
                Pair {
                    rule: SEMICOLON,
                    span: Span {
                        str: ";",
                        start: 785,
                        end: 786,
                    },
                    inner: [],
                },
                Pair {
                    rule: DOUBLE_QUOTED_STRING_LITERAL,
                    span: Span {
                        str: "\"This is a double quoted string literal with a literal backslash: \\bar\"",
                        start: 787,
                        end: 858,
                    },
                    inner: [],
                },
                Pair {
                    rule: SEMICOLON,
                    span: Span {
                        str: ";",
                        start: 858,
                        end: 859,
                    },
                    inner: [],
                },
                Pair {
                    rule: DOUBLE_QUOTED_STRING_LITERAL,
                    span: Span {
                        str: "\"This is a double quoted string literal with variable interpolation: $foo\"",
                        start: 860,
                        end: 934,
                    },
                    inner: [],
                },
                Pair {
                    rule: SEMICOLON,
                    span: Span {
                        str: ";",
                        start: 934,
                        end: 935,
                    },
                    inner: [],
                },
                Pair {
                    rule: DOUBLE_QUOTED_STRING_LITERAL,
                    span: Span {
                        str: "b\"This is a double quoted binary string literal\"",
                        start: 936,
                        end: 984,
                    },
                    inner: [],
                },
                Pair {
                    rule: SEMICOLON,
                    span: Span {
                        str: ";",
                        start: 984,
                        end: 985,
                    },
                    inner: [],
                },
            ],
        },
    ],
}
